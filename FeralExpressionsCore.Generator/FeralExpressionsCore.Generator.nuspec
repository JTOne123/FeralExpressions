<?xml version="1.0"?>
<package >
	<metadata>
		<id>FeralExpressionsCore.Generator</id>
		<version>1.3.0-alpha</version>
		<title>FeralExpressions.Generator</title>
		<authors>ruben morton</authors>
		<owners>ruben morton</owners>
		<projectUrl>https://github.com/ze1tgeist/FeralExpressions</projectUrl>
		<requireLicenseAcceptance>false</requireLicenseAcceptance>
		<description>
This project supplies compile time support for FeralExpressionsCore.
For every.cs file which contains a partial class with one or more expression bodied method, it creates an equivalent of that
method which has the same logic, but is a static Expression property.
For example,
public static string Test(string arg1) => ""abc"" + arg1;
would produce
public static Expression&lt;Func&lt;string,string&gt;&gt; Test_Expression => (string arg1) => ""abc"" + arg1;</description>
		<summary>Compile time support for FeralExpressionsCore</summary>
		<releaseNotes>
			- Rewrote the generator in .NET core. Later Versions of Microsoft.CodeAnalysis only support core, so this seemed easier.  Passes the same tests as the old generator.
		</releaseNotes>
		<copyright>Copyright 2018</copyright>
		<tags>Linq EntityFramework Expressions Inline</tags>
		<dependencies>			
		</dependencies>
	</metadata>
	<files>
		<file src="bin\Release\**\*.dll" target="tools" />
		<file src="bin\Release\**\*.deps.json" target="tools" />
		<file src="bin\Release\**\*.runtimeconfig.json" target="tools" />
		<file src="FeralExpressionsCore.Generator.targets" target="build" />
	</files>
</package>